#!/bin/sh
# NAME:
#   Wrapper for calling rtiwanserver 
#
# USAGE:
#   rtiwanserver -help
#

filename=$0
scriptDir=`dirname "$filename"`
utilityLibDir="${scriptDir}/../lib"

################################################################
# SCRIPT maintenance for new platforms and utilities

executableName="rtiwanserver"

# This section needs to be updated if we add new classes of platforms
# e.g. entirely new operating systems or major versions
# The script looks at the lib directories so it is robust to
# new compiler names/versions as well as minor OS revisions

sparcSol28Platforms=`ls -1 $utilityLibDir/ | grep sparcSol2.8`
i86Sol29Platforms=`ls -1 $utilityLibDir/ | grep i86Sol2.9`
sparcSol29Platforms=`ls -1 $utilityLibDir/ | grep sparcSol2.9`
sparcSol210Platforms=`ls -1 $utilityLibDir/ | grep sparcSol2.10`

i86Sol210Platforms=`ls -1 $utilityLibDir/ | grep i86Sol2.10`
x64Sol210Platforms=`ls -1 $utilityLibDir/ | grep x64Sol2.10`
sparc64Sol210Platforms=`ls -1 $utilityLibDir/ | grep sparc64Sol2.10`

i86Linux24Platforms=`ls -1 $utilityLibDir/ | grep i86Linux2.4`
x64Linux24Platforms=`ls -1 $utilityLibDir/ | grep x64Linux2.4`
i86Linux26Platforms=`ls -1 $utilityLibDir/ | grep i86Linux2.6`
x64Linux26Platforms=`ls -1 $utilityLibDir/ | grep x64Linux2.6`
ppcLinux26Platforms=`ls -1 $utilityLibDir/ | grep ppc7400Linux2.6`
i86Linux3xPlatforms=`ls -1 $utilityLibDir/ | grep i86Linux3`
x64Linux3xPlatforms=`ls -1 $utilityLibDir/ | grep x64Linux3`

i86SusePlatforms=`ls -1 $utilityLibDir/ | grep i86Suse`
x64SusePlatforms=`ls -1 $utilityLibDir/ | grep x64Suse`

i86Lynx4Platforms=`ls -1 $utilityLibDir/ | grep i86Lynx4`
ppcLynx4Platforms=`ls -1 $utilityLibDir/ | grep ppc | grep Lynx4`

i86LynxSEPlatforms=`ls -1 $utilityLibDir/ | grep i86LynxOS_SE`

ppcbeQNX6Platforms=`ls -1 $utilityLibDir/ | grep ppcbeQNX6`
i86QNX6Platforms=`ls -1 $utilityLibDir/ | grep i86QNX6`

p5AIXPlatforms=`ls -1 $utilityLibDir/ | grep "^p5AIX"`
p564AIXPlatforms=`ls -1 $utilityLibDir/ | grep "^64p5AIX"`

platformName="unknown"

os=`uname -s`
osver=`uname -r`

case $os in
SunOS*)
    processor=`uname -p`
    case $osver in
    5.8*)
    platformsToTry=$sparcSol28Platforms
    ;;
    5.9*)
    platformsToTry="$sparcSol29Platforms $sparcSol28Platforms"
    ;;
    5.10*)
    if test "$processor" = "i386"; then
        platformsToTry="$i86Sol210Platforms $x64Sol210Platforms"
    fi
    if test "$processor" = "sparc"; then
            platformsToTry="$sparcSol210Platforms $sparcSol29Platforms $sparcSol28Platforms $sparc64Sol210Platforms"
    fi
    ;;
    esac
    ;;

AIX*)
    processor=`uname -p`
    if test "$processor" = "powerpc"; then
      platformsToTry="$p5AIXPlatforms $p564AIXPlatforms"
    fi
    ;;

Linux*)
    processor=`uname -i`
    case $osver in
    2.4*)
    if test "$processor" = "x86_64"; then
        platformsToTry="$x64Linux24Platforms"
    else
        platformsToTry=$i86Linux24Platforms
    fi;;
    2.6* | 3.*)
    if test "$processor" = "x86_64"; then
        platformsToTry="$x64Linux3xPlatforms $x64Linux26Platforms $x64SusePlatforms $i86Linux3xPlatforms $i86Linux26Platforms $i86SusePlatforms"
    elif test "$processor" = "ppc"; then
        platformsToTry="$ppcLinux26Platforms"
	elif test "$processor" = "unknown"; then
	    processor=`uname -m`
		if test "$processor" = "x86_64"; then
			platformsToTry="$x64Linux3xPlatforms $x64Linux26Platforms"
		else
			platformsToTry="$i86Linux3xPlatforms $i86Linux26Platforms"
		fi	
    else
        platformsToTry="$i86Linux3xPlatforms $i86Linux26Platforms $i86SusePlatforms"
    fi;;
    esac
    ;;

LynxOS-SE*)
    processor=`uname -m`
    case $osver in
    3.*)
    if test "$processor" = "i386"; then
        platformsToTry=$i86LynxSEPlatforms
    fi
    ;;
    esac
    ;;

LynxOS*)
    processor=`uname -m`
    case $osver in
    4.*)
    if test "$processor" = "i386"; then
        platformsToTry=$i86Lynx4Platforms
    fi
    if test "$processor" = "PowerPC"; then
        platformsToTry=$ppcLynx4Platforms
    fi
    ;;
    esac
    ;;

QNX*)
    processor=`uname -p`
    case $osver in
    6.*)
    if [ "$processor"="ppcbe" ]; then
        platformsToTry=$ppcbeQNX6Platforms
    fi
    if [ "$processor"="i386" ]; then
        platformsToTry=$i86QNX6Platforms
    fi
    ;;
    esac
    ;;

*)
    # If we don't recognize the OS, fall back to JREHOME. It may still work.
    echo "Warning: OS $os may not be supported."
    ;;
esac

# Now search the platform directories for the executable in the
# correct order and run the first one found
#echo testing $platformsToTry

for platform in $platformsToTry
do
#   echo testing $utilityLibDir/$platform/$executableName
   if [ -x $utilityLibDir/$platform/$executableName ]; then
       platformName=$platform
       break;
   fi
done

if [ "$platformName" = "unknown" ]; then
    echo "Warning: Could not find the executable for $executableName."
    echo "         Please examine $NDDSHOME/lib/<arch> to find the executable for $executableName"
    echo "         and run this executable directly. If $executableName is not in your lib directory"
    echo "         please contact support@rti.com."
else
    exec ${utilityLibDir}/${platformName}/$executableName $@
fi

