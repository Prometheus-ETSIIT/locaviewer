/*
 * Copyright (C) 2014 Prometheus
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

package triangulacion;

import comunicador.CamaraPos;
import comunicador.Dato;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.Timer;

/**
 *
 */
public class TestFrame extends javax.swing.JFrame {

    private final Timer randomTest;
    private final TriangulacionOctave triang;
    
    public TestFrame(final TriangulacionOctave triangulacion) {
        initComponents();
        this.triang = triangulacion;
        this.rtPanel.initialize(triangulacion);
        
        this.btnPause.setEnabled(false);
        this.randomTest = new Timer(4000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int rssi1 = (int)((Math.random() * 40) - 90);
                int rssi2 = (int)((Math.random() * 40) - 90);
                int rssi3 = (int)((Math.random() * 40) - 90);
                
                List<Dato> sensores = new ArrayList<>();
                sensores.add(new Dato("S1", 0, 0, "Chavea", rssi1));
                sensores.add(new Dato("S2", 6, 0, "Chavea", rssi2));
                sensores.add(new Dato("S3", 0, 6, "Chavea", rssi3));
                triangulacion.triangular(sensores);
            }
        });
    }

    public void activateRandomTests() {
        this.randomTest.start();
        this.btnPause.setEnabled(true);
    }
    
    public RealTimePanel getRT() {
        return this.rtPanel;
    }
    
    public void setNewSensors(final List<Dato> sensors) {
        // Pone la posición del niño
        double[] childPos = triang.getLastPosition();
        this.txtChildPosX.setText(Double.toString(((int)(childPos[0] * 1000)) / 1000.0));
        this.txtChildPosY.setText(Double.toString(((int)(childPos[1] * 1000)) / 1000.0));
        
        // Pone la mejor cámara
        int bestCamIdx = triang.getLastCamIndex();
        this.txtCamIdx.setText(Integer.toString(bestCamIdx));
        if (bestCamIdx != -1) {
            CamaraPos bestCam = this.triang.getCamaras().get(bestCamIdx);
            this.txtCamId.setText(bestCam.getID());
            this.txtCamPosX.setText(Double.toString(((int)(bestCam.getPosX() * 1000)) / 1000.0));
            this.txtCamPosY.setText(Double.toString(((int)(bestCam.getPosY() * 1000)) / 1000.0));
        } else {
            this.txtCamId.setText("-1");
            this.txtCamPosX.setText("");
            this.txtCamPosY.setText("");
        }
        
        // Muestra los mensajes de debug
        this.txtDebug.setText("Niño: " + sensors.get(0).getIDNino() + "\n");
        for (Dato sensor : sensors) {
            this.txtDebug.append("ID: " + sensor.getID() + " | ");
            this.txtDebug.append("X: " + sensor.getPosicionSensor().getPrimero() + " | ");
            this.txtDebug.append("Y: " + sensor.getPosicionSensor().getSegundo() + " | ");
            this.txtDebug.append("RSSI: " + sensor.getIntensidad() + "\n");
        }
        
        // Actualiza el componente para que pinte la situación
        this.rtPanel.setNewSensors(sensors);
        this.repaint();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rtPanel = new triangulacion.RealTimePanel();
        jLabel1 = new javax.swing.JLabel();
        checkCams = new javax.swing.JCheckBox();
        checkSensors = new javax.swing.JCheckBox();
        checkBestCams = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        btnPause = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtChildPosX = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtChildPosY = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCamIdx = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtCamId = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDebug = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        txtCamPosX = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCamPosY = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Real Time Trianguleishon");
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        rtPanel.setPreferredSize(new java.awt.Dimension(400, 400));

        javax.swing.GroupLayout rtPanelLayout = new javax.swing.GroupLayout(rtPanel);
        rtPanel.setLayout(rtPanelLayout);
        rtPanelLayout.setHorizontalGroup(
            rtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 474, Short.MAX_VALUE)
        );
        rtPanelLayout.setVerticalGroup(
            rtPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 477, Short.MAX_VALUE)
        );

        jLabel1.setText("Capas:");

        checkCams.setText("Mostrar ángulos de visión");
        checkCams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCamsActionPerformed(evt);
            }
        });

        checkSensors.setText("Mostrar valores de sensores");
        checkSensors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkSensorsActionPerformed(evt);
            }
        });

        checkBestCams.setText("Resaltar cámara escogida");
        checkBestCams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBestCamsActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("by PROMETHEUS");

        btnPause.setText("Pausar");
        btnPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPauseActionPerformed(evt);
            }
        });

        jLabel3.setText("Posición niño:");

        jLabel4.setText("X:");

        txtChildPosX.setEditable(false);
        txtChildPosX.setColumns(4);

        jLabel5.setText("Y:");

        txtChildPosY.setEditable(false);
        txtChildPosY.setColumns(4);

        jLabel6.setText("Cámara elegida:");

        jLabel7.setText("Índice:");

        txtCamIdx.setEditable(false);
        txtCamIdx.setColumns(2);

        jLabel8.setText("ID:");

        txtCamId.setEditable(false);
        txtCamId.setColumns(7);

        txtDebug.setEditable(false);
        txtDebug.setColumns(20);
        txtDebug.setRows(5);
        jScrollPane2.setViewportView(txtDebug);

        jLabel9.setText("X:");

        txtCamPosX.setEditable(false);
        txtCamPosX.setColumns(4);

        jLabel10.setText("Y:");

        txtCamPosY.setEditable(false);
        txtCamPosY.setColumns(4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(rtPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkSensors, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(checkCams, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(checkBestCams, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGap(79, 79, 79)
                                            .addComponent(jLabel6))
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtCamIdx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtCamId))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGap(53, 53, 53)
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtChildPosX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtChildPosY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPause)
                        .addGap(94, 94, 94))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCamPosX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCamPosY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rtPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkCams)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkSensors)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkBestCams)
                .addGap(26, 26, 26)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtChildPosX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtChildPosY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCamIdx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(txtCamId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtCamPosX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtCamPosY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(btnPause)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (this.randomTest.isRunning())
            this.randomTest.stop();
        this.rtPanel.close();
    }//GEN-LAST:event_formWindowClosing

    private void checkCamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCamsActionPerformed
        this.rtPanel.setShowCams(this.checkCams.isSelected());
    }//GEN-LAST:event_checkCamsActionPerformed

    private void checkSensorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkSensorsActionPerformed
        this.rtPanel.setShowSensors(this.checkSensors.isSelected());
    }//GEN-LAST:event_checkSensorsActionPerformed

    private void checkBestCamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBestCamsActionPerformed
        this.rtPanel.setShowBestCam(this.checkBestCams.isSelected());
    }//GEN-LAST:event_checkBestCamsActionPerformed

    private void btnPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPauseActionPerformed
        if (this.randomTest.isRunning()) {
            this.randomTest.stop();
            this.btnPause.setText("Continuar");
        } else {
            this.randomTest.start();
            this.btnPause.setText("Pausar");
        }
    }//GEN-LAST:event_btnPauseActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPause;
    private javax.swing.JCheckBox checkBestCams;
    private javax.swing.JCheckBox checkCams;
    private javax.swing.JCheckBox checkSensors;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private triangulacion.RealTimePanel rtPanel;
    private javax.swing.JTextField txtCamId;
    private javax.swing.JTextField txtCamIdx;
    private javax.swing.JTextField txtCamPosX;
    private javax.swing.JTextField txtCamPosY;
    private javax.swing.JTextField txtChildPosX;
    private javax.swing.JTextField txtChildPosY;
    private javax.swing.JTextArea txtDebug;
    // End of variables declaration//GEN-END:variables
}
